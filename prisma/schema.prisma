// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

model User {
  id            String    @id
  name          String
  email         String
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  sessions      Session[]
  accounts      Account[]

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model KyThi {
  id             Int         @id @default(autoincrement())
  name           String
  description    String
  admissionYear  Int         // Năm tuyển sinh
  admissionBatch String      // Khóa tuyển sinh
  applications   Application[] // Danh sách đăng ký của thí sinh

  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model ThiSinh {
  id             Int         @id @default(autoincrement())
  hoTen       String
  soBaoDanh     String      @unique // Số báo danh duy nhất
  CCCD     String      @unique // CCCD duy nhất
  applications   Application[]
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model Application {
  id             Int         @id @default(autoincrement())
  soThuTu        Int
  thiSinhId      Int
  nganh          Int
  vung           Int
  kyThiId        Int
  phuongThuc     PhuongThuc  // Phương thức 1 hoặc 2 hoac 3
  diemCong       Int?
  diemBaiThiTuLuan1  Int?
  diemBaiThiTuLuan2  Int?
  maToHop    String?
  maBaiThi           String?
  tongDiemXetTuyen Float?
  ketQua         KetQua?

  candidate      ThiSinh   @relation(fields: [thiSinhId], references: [id])
  kyThi           KyThi        @relation(fields: [kyThiId], references: [id])

  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt  

  @@unique([thiSinhId, kyThiId, phuongThuc]) // Một người chỉ được đăng ký 1 lần/mỗi phương thức/kỳ thi
}

enum PhuongThuc {
  METHOD_1
  METHOD_2
  METHOD_3
}

enum KetQua {
  PASSED
  NOT_PASSED
}
